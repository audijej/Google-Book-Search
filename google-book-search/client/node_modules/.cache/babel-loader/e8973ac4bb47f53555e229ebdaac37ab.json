{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\audij\\\\dev\\\\Google-Book-Search\\\\google-book-search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\audij\\\\dev\\\\Google-Book-Search\\\\google-book-search\\\\client\\\\src\\\\pages\\\\SearchBook.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Input, TextArea, FormBtn } from '../components/Form/SearchForm';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { DeleteBtn, ViewBtn, SaveBtn } from '../components/Button/Btn';\nimport API from \"../utils/API\";\nimport Container from 'react-bootstrap/Container';\nimport { List, ListItem } from \"../components/List/List\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\n\nfunction SearchBook() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({\n    savedBook: [],\n    title: [],\n    author: [],\n    synopsis: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1];\n\n  var _useState5 = useState({\n    listing: []\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bookList = _useState6[0],\n      setbookList = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchTerm = _useState8[0],\n      setSearchTerm = _useState8[1];\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  function searchForBook(event) {\n    event.preventDefault();\n    var query = books;\n    var BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\n    axios.get(BASEURL + query).then(function (res) {\n      console.log(\"hello\");\n      setbookList({\n        listing: res.data.items\n      });\n      setFormObject({\n        savedBook: res.data.items,\n        title: res.data.items,\n        author: res.data.items,\n        synopsis: res.data.items\n      });\n      console.log(res.data.items);\n    });\n  } // Submit handler\n\n\n  var onSubmitHandler = function onSubmitHandler(event) {\n    // Prevent browser refreshing after form submission\n    event.preventDefault(); // Call fetch books async function\n\n    searchForBook();\n  };\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // function handleInputChange(event) {\n  //     const { name, value } = event.target;\n  //     setFormObject({ ...formObject, [name]: value })\n  // };\n\n\n  var handleInputChange = function handleInputChange(event) {\n    setSearchTerm(event.target.value);\n  };\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    API.saveBook({\n      title: \"howdy\",\n      author: formObject.author,\n      synopsis: formObject.synopsis\n    }).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    console.log(\"the book \".concat(bookList.listing, \" has been saved\"));\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Google Book Club\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Find a book today.\"))), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    id: \"booksearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Search A Book\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: searchForBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Book Search\",\n    value: searchTerm,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn // enabled={!(formObject.title)}\n  // onClick={handleFormSubmit}\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Save your book\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Results\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, bookList.listing.map(function (bookListing, item) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, \"ID: \", bookListing.id), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, \"Title: \", bookListing.volumeInfo.title), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, \"Author: \", bookListing.volumeInfo.authors), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, \"Synopsis: \", bookListing.volumeInfo.description)), /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: bookListing.volumeInfo.previewLink,\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: bookListing.volumeInfo.imageLinks.smallThumbnail,\n      alt: \"bookImage\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ViewBtn, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(SaveBtn, {\n      onClick: handleFormSubmit,\n      title: bookListing.volumeInfo.title,\n      authors: bookListing.volumeInfo.authors,\n      description: bookListing.volumeInfo.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 48\n      }\n    }))));\n  }))));\n}\n\nexport default SearchBook;","map":{"version":3,"sources":["C:/Users/audij/dev/Google-Book-Search/google-book-search/client/src/pages/SearchBook.js"],"names":["React","useState","useEffect","Input","TextArea","FormBtn","FormControl","Button","DeleteBtn","ViewBtn","SaveBtn","API","Container","List","ListItem","Jumbotron","Col","Row","axios","SearchBook","books","setBooks","savedBook","title","author","synopsis","formObject","setFormObject","listing","bookList","setbookList","searchTerm","setSearchTerm","loadBooks","searchForBook","event","preventDefault","query","BASEURL","get","then","res","console","log","data","items","onSubmitHandler","getBooks","catch","err","deleteBook","id","handleInputChange","target","value","handleFormSubmit","saveBook","map","bookListing","item","volumeInfo","authors","color","description","previewLink","imageLinks","smallThumbnail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Input, TextArea, FormBtn } from '../components/Form/SearchForm';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport { DeleteBtn, ViewBtn, SaveBtn } from '../components/Button/Btn';\nimport API from \"../utils/API\";\nimport Container from 'react-bootstrap/Container';\nimport { List, ListItem } from \"../components/List/List\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\n\n\n\nfunction SearchBook() {\n\n    const [books, setBooks] = useState('')\n    const [formObject, setFormObject] = useState({\n        savedBook: [],\n        title: [],\n        author: [],\n        synopsis: []\n    })\n    const [bookList, setbookList] = useState({ listing: [] })\n    const [searchTerm, setSearchTerm] = useState('')\n\n    useEffect(() => {\n        loadBooks()\n    }, [])\n\n    function searchForBook(event) {\n        event.preventDefault();\n        const query = books;\n        const BASEURL = `https://www.googleapis.com/books/v1/volumes?q=`\n        axios.get(BASEURL + query)\n            .then(res => {\n                console.log(\"hello\")\n                setbookList({ listing: res.data.items })\n                setFormObject({ savedBook: res.data.items, title: res.data.items, author: res.data.items, synopsis: res.data.items })\n                console.log(res.data.items)\n\n            })\n    }\n\n    // Submit handler\n    const onSubmitHandler = (event) => {\n        // Prevent browser refreshing after form submission\n        event.preventDefault();\n        // Call fetch books async function\n        searchForBook();\n    }\n\n    function loadBooks() {\n        API.getBooks()\n            .then(res =>\n                setBooks(res.data)\n            )\n            .catch(err => console.log(err));\n    };\n\n    function deleteBook(id) {\n        API.deleteBook(id)\n            .then(res => loadBooks())\n            .catch(err => console.log(err));\n    }\n\n    // function handleInputChange(event) {\n    //     const { name, value } = event.target;\n    //     setFormObject({ ...formObject, [name]: value })\n    // };\n\n    const handleInputChange = (event) => {\n        setSearchTerm(event.target.value)\n    }\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n\n        API.saveBook({\n            title: \"howdy\",\n            author: formObject.author,\n            synopsis: formObject.synopsis\n        })\n            .then(res => loadBooks())\n            .catch(err => console.log(err));\n        console.log(`the book ${bookList.listing} has been saved`)\n    };\n\n\n\n    return (\n        <div>\n            <div className=\"container\">\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Google Book Club</h1>\n                        <p>\n                            Find a book today.\n                    </p>\n                    </Container>\n                </Jumbotron>\n\n                <Container fluid id=\"booksearch\">\n                    <h1>Search A Book</h1>\n                    <form onSubmit={searchForBook}>\n                        <Input\n                            placeholder='Book Search'\n                            value={searchTerm}\n                            onChange={handleInputChange} />\n                        <br></br>\n\n                        <FormBtn\n                        // enabled={!(formObject.title)}\n                        // onClick={handleFormSubmit}\n                        >Save your book</FormBtn>\n                    </form>\n                </Container>\n            </div>\n\n            <br></br>\n            <br></br>\n\n            <div>\n                <h1>Results</h1>\n                <List>\n\n                    {bookList.listing.map((bookListing, item) => (\n                        <ListItem key={item}>\n                            <Row>\n                                <Col>\n                                    <h5>ID: {bookListing.id}</h5>\n                                    <h5>Title: {bookListing.volumeInfo.title}</h5>\n                                    <h5>Author: {bookListing.volumeInfo.authors}</h5>\n                                    <p style={{ color: \"black\" }}>Synopsis: {bookListing.volumeInfo.description}</p>\n                                </Col>\n                                <Col>\n                                    <a href={bookListing.volumeInfo.previewLink} target=\"_blank\"  >\n                                        <img src={bookListing.volumeInfo.imageLinks.smallThumbnail} alt=\"bookImage\" />\n                                    </a>\n                                </Col>\n                                <Col>\n                                    <ViewBtn /><SaveBtn onClick={handleFormSubmit}\n                                        title={bookListing.volumeInfo.title}\n                                        authors={bookListing.volumeInfo.authors}\n                                        description={bookListing.volumeInfo.description} />\n                                        \n                                </Col>\n                            </Row>\n\n                        </ListItem>\n\n                    ))}\n                </List>\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default SearchBook;\n"]},"metadata":{},"sourceType":"module"}